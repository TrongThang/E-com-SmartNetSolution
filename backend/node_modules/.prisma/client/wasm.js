
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  account_id: 'account_id',
  customer_id: 'customer_id',
  employee_id: 'employee_id',
  role_id: 'role_id',
  username: 'username',
  password: 'password',
  verification_code: 'verification_code',
  verification_expiry: 'verification_expiry',
  report: 'report',
  is_new: 'is_new',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  is_locked: 'is_locked',
  locked_at: 'locked_at'
};

exports.Prisma.Address_bookScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  receiver_name: 'receiver_name',
  phone: 'phone',
  district: 'district',
  city: 'city',
  ward: 'ward',
  street: 'street',
  detail: 'detail',
  is_default: 'is_default',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Alert_typesScalarFieldEnum = {
  alert_type_id: 'alert_type_id',
  alert_type_name: 'alert_type_name',
  priority: 'priority',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AlertsScalarFieldEnum = {
  alert_id: 'alert_id',
  device_serial: 'device_serial',
  space_id: 'space_id',
  message: 'message',
  timestamp: 'timestamp',
  status: 'status',
  alert_type_id: 'alert_type_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.AttributeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  datatype: 'datatype',
  required: 'required',
  group_attribute_id: 'group_attribute_id',
  is_hide: 'is_hide',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Attribute_categoryScalarFieldEnum = {
  id: 'id',
  attribute_id: 'attribute_id',
  category_id: 'category_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Attribute_groupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Attribute_productScalarFieldEnum = {
  product_id: 'product_id',
  attribute_id: 'attribute_id',
  is_hide: 'is_hide',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Batch_product_detailScalarFieldEnum = {
  id: 'id',
  exp_batch_id: 'exp_batch_id',
  imp_batch_id: 'imp_batch_id',
  batch_production_id: 'batch_production_id',
  serial_number: 'serial_number',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.BlogScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  product_id: 'product_id',
  title: 'title',
  author: 'author',
  content: 'content',
  content_normal: 'content_normal',
  image: 'image',
  score: 'score',
  is_hide: 'is_hide',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  product_id: 'product_id',
  quantity: 'quantity',
  selected: 'selected',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  category_id: 'category_id',
  name: 'name',
  key: 'key',
  slug: 'slug',
  parent_id: 'parent_id',
  image: 'image',
  description: 'description',
  is_hide: 'is_hide',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ComponentsScalarFieldEnum = {
  component_id: 'component_id',
  name: 'name',
  supplier: 'supplier',
  unit_cost: 'unit_cost',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  status: 'status'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  fullname: 'fullname',
  title: 'title',
  content: 'content',
  email: 'email',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  surname: 'surname',
  lastname: 'lastname',
  image: 'image',
  phone: 'phone',
  email: 'email',
  email_verified: 'email_verified',
  birthdate: 'birthdate',
  gender: 'gender',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Detail_exportScalarFieldEnum = {
  batch_code: 'batch_code',
  export_id: 'export_id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  note: 'note',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Detail_importScalarFieldEnum = {
  batch_code: 'batch_code',
  import_id: 'import_id',
  product_id: 'product_id',
  quantity: 'quantity',
  import_price: 'import_price',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Device_templatesScalarFieldEnum = {
  template_id: 'template_id',
  device_type_id: 'device_type_id',
  name: 'name',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  status: 'status',
  production_cost: 'production_cost'
};

exports.Prisma.DevicesScalarFieldEnum = {
  device_id: 'device_id',
  serial_number: 'serial_number',
  template_id: 'template_id',
  space_id: 'space_id',
  account_id: 'account_id',
  group_id: 'group_id',
  hub_id: 'hub_id',
  firmware_id: 'firmware_id',
  name: 'name',
  power_status: 'power_status',
  attribute: 'attribute',
  wifi_ssid: 'wifi_ssid',
  wifi_password: 'wifi_password',
  current_value: 'current_value',
  link_status: 'link_status',
  last_reset_at: 'last_reset_at',
  lock_status: 'lock_status',
  locked_at: 'locked_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  surname: 'surname',
  lastname: 'lastname',
  image: 'image',
  email: 'email',
  birthdate: 'birthdate',
  gender: 'gender',
  phone: 'phone',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  warehouse_id: 'warehouse_id'
};

exports.Prisma.Export_warehouseScalarFieldEnum = {
  id: 'id',
  export_code: 'export_code',
  export_number: 'export_number',
  employee_id: 'employee_id',
  export_date: 'export_date',
  file_authenticate: 'file_authenticate',
  total_profit: 'total_profit',
  note: 'note',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.FirmwareScalarFieldEnum = {
  firmware_id: 'firmware_id',
  version: 'version',
  file_path: 'file_path',
  template_id: 'template_id',
  is_mandatory: 'is_mandatory',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  note: 'note',
  name: 'name',
  is_approved: 'is_approved',
  logs: 'logs',
  tested_at: 'tested_at'
};

exports.Prisma.Firmware_update_historyScalarFieldEnum = {
  update_id: 'update_id',
  device_serial: 'device_serial',
  firmware_id: 'firmware_id',
  updated_at: 'updated_at',
  status: 'status',
  created_at: 'created_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.GroupsScalarFieldEnum = {
  group_id: 'group_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Hourly_valuesScalarFieldEnum = {
  hourly_value_id: 'hourly_value_id',
  device_serial: 'device_serial',
  space_id: 'space_id',
  hour_timestamp: 'hour_timestamp',
  avg_value: 'avg_value',
  sample_count: 'sample_count',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.HousesScalarFieldEnum = {
  house_id: 'house_id',
  group_id: 'group_id',
  name: 'name',
  address: 'address',
  icon_name: 'icon_name',
  icon_color: 'icon_color',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Image_productScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  image: 'image',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Import_warehouseScalarFieldEnum = {
  id: 'id',
  import_number: 'import_number',
  employee_id: 'employee_id',
  warehouse_id: 'warehouse_id',
  import_date: 'import_date',
  file_authenticate: 'file_authenticate',
  total_money: 'total_money',
  note: 'note',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.LikedScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  product_id: 'product_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  role_id: 'role_id',
  text: 'text',
  type: 'type',
  is_read: 'is_read',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  order_number: 'order_number',
  customer_id: 'customer_id',
  saler_id: 'saler_id',
  shipper_id: 'shipper_id',
  export_date: 'export_date',
  total_import_money: 'total_import_money',
  discount: 'discount',
  vat: 'vat',
  total_money: 'total_money',
  shipping_fee: 'shipping_fee',
  amount: 'amount',
  profit: 'profit',
  address: 'address',
  payment_method: 'payment_method',
  payment_account: 'payment_account',
  phone: 'phone',
  name_recipient: 'name_recipient',
  note: 'note',
  platform_order: 'platform_order',
  status: 'status',
  image_shipped: 'image_shipped',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Order_detailScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  unit: 'unit',
  warrenty_time: 'warrenty_time',
  sale_price: 'sale_price',
  discount: 'discount',
  quantity_sold: 'quantity_sold',
  amount: 'amount',
  delivery_date: 'delivery_date',
  receiving_date: 'receiving_date',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Ownership_historyScalarFieldEnum = {
  history_id: 'history_id',
  approved_request_id: 'approved_request_id',
  device_serial: 'device_serial',
  from_user_id: 'from_user_id',
  to_user_id: 'to_user_id',
  transferred_at: 'transferred_at',
  legal_expired_date: 'legal_expired_date',
  is_expired: 'is_expired',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Payment_infoScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  account_number: 'account_number',
  bank: 'bank',
  name_account: 'name_account',
  is_default: 'is_default',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  type: 'type',
  show_in_menu: 'show_in_menu',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Permission_roleScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  permission_id: 'permission_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  description_normal: 'description_normal',
  image: 'image',
  selling_price: 'selling_price',
  category_id: 'category_id',
  unit_id: 'unit_id',
  warrenty_time_id: 'warrenty_time_id',
  views: 'views',
  is_hide: 'is_hide',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.PlanningScalarFieldEnum = {
  planning_id: 'planning_id',
  status: 'status',
  logs: 'logs',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  planning_note: 'planning_note'
};

exports.Prisma.Production_batchesScalarFieldEnum = {
  batch_id: 'batch_id',
  production_batch_id: 'production_batch_id',
  template_id: 'template_id',
  quantity: 'quantity',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  batch_note: 'batch_note',
  logs: 'logs',
  planning_id: 'planning_id',
  firmware_id: 'firmware_id'
};

exports.Prisma.Production_componentsScalarFieldEnum = {
  production_component_id: 'production_component_id',
  production_id: 'production_id',
  component_id: 'component_id',
  quantity_used: 'quantity_used',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Production_trackingScalarFieldEnum = {
  production_id: 'production_id',
  device_serial: 'device_serial',
  stage: 'stage',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted',
  batch_id: 'batch_id',
  state_logs: 'state_logs'
};

exports.Prisma.Review_productScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  product_id: 'product_id',
  comment: 'comment',
  image: 'image',
  rating: 'rating',
  response: 'response',
  note: 'note',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Share_requestsScalarFieldEnum = {
  request_id: 'request_id',
  device_serial: 'device_serial',
  from_user_id: 'from_user_id',
  to_user_id: 'to_user_id',
  permission_type: 'permission_type',
  status: 'status',
  requested_at: 'requested_at',
  approved_at: 'approved_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Shared_permissionsScalarFieldEnum = {
  permission_id: 'permission_id',
  device_serial: 'device_serial',
  shared_with_user_id: 'shared_with_user_id',
  permission_type: 'permission_type',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.SlideshowScalarFieldEnum = {
  id: 'id',
  text_button: 'text_button',
  link: 'link',
  image: 'image',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.SpacesScalarFieldEnum = {
  space_id: 'space_id',
  house_id: 'house_id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Sync_trackingScalarFieldEnum = {
  sync_id: 'sync_id',
  account_id: 'account_id',
  user_device_id: 'user_device_id',
  ip_address: 'ip_address',
  last_synced_at: 'last_synced_at',
  sync_type: 'sync_type',
  sync_status: 'sync_status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Template_componentsScalarFieldEnum = {
  template_component_id: 'template_component_id',
  template_id: 'template_id',
  component_id: 'component_id',
  quantity_required: 'quantity_required',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.Ticket_typesScalarFieldEnum = {
  ticket_type_id: 'ticket_type_id',
  type_name: 'type_name',
  priority: 'priority',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.TicketsScalarFieldEnum = {
  ticket_id: 'ticket_id',
  user_id: 'user_id',
  device_serial: 'device_serial',
  ticket_type_id: 'ticket_type_id',
  description: 'description',
  evidence: 'evidence',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  assigned_to: 'assigned_to',
  resolved_at: 'resolved_at',
  resolve_solution: 'resolve_solution',
  is_deleted: 'is_deleted'
};

exports.Prisma.UnitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.User_devicesScalarFieldEnum = {
  user_device_id: 'user_device_id',
  user_id: 'user_id',
  device_name: 'device_name',
  device_id: 'device_id',
  device_token: 'device_token',
  last_login: 'last_login',
  last_out: 'last_out',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.User_groupsScalarFieldEnum = {
  user_group_id: 'user_group_id',
  account_id: 'account_id',
  group_id: 'group_id',
  role: 'role',
  joined_at: 'joined_at',
  updated_at: 'updated_at',
  is_deleted: 'is_deleted'
};

exports.Prisma.WarehouseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  province: 'province',
  district: 'district',
  ward: 'ward'
};

exports.Prisma.Warehouse_inventoryScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  batch_code: 'batch_code',
  stock: 'stock',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Warrenty_timeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  time: 'time',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.accountOrderByRelevanceFieldEnum = {
  account_id: 'account_id',
  customer_id: 'customer_id',
  employee_id: 'employee_id',
  username: 'username',
  password: 'password',
  verification_code: 'verification_code'
};

exports.Prisma.address_bookOrderByRelevanceFieldEnum = {
  customer_id: 'customer_id',
  receiver_name: 'receiver_name',
  phone: 'phone',
  district: 'district',
  city: 'city',
  ward: 'ward',
  street: 'street',
  detail: 'detail'
};

exports.Prisma.alert_typesOrderByRelevanceFieldEnum = {
  alert_type_name: 'alert_type_name'
};

exports.Prisma.alertsOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  message: 'message',
  status: 'status'
};

exports.Prisma.attributeOrderByRelevanceFieldEnum = {
  name: 'name',
  datatype: 'datatype'
};

exports.Prisma.attribute_groupOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.attribute_productOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  value: 'value'
};

exports.Prisma.batch_product_detailOrderByRelevanceFieldEnum = {
  exp_batch_id: 'exp_batch_id',
  imp_batch_id: 'imp_batch_id',
  batch_production_id: 'batch_production_id',
  serial_number: 'serial_number'
};

exports.Prisma.blogOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  title: 'title',
  author: 'author',
  content: 'content',
  content_normal: 'content_normal',
  image: 'image'
};

exports.Prisma.cartOrderByRelevanceFieldEnum = {
  customer_id: 'customer_id',
  product_id: 'product_id'
};

exports.Prisma.categoriesOrderByRelevanceFieldEnum = {
  name: 'name',
  key: 'key',
  slug: 'slug',
  image: 'image',
  description: 'description'
};

exports.Prisma.componentsOrderByRelevanceFieldEnum = {
  name: 'name',
  supplier: 'supplier'
};

exports.Prisma.contactOrderByRelevanceFieldEnum = {
  fullname: 'fullname',
  title: 'title',
  content: 'content',
  email: 'email'
};

exports.Prisma.customerOrderByRelevanceFieldEnum = {
  id: 'id',
  surname: 'surname',
  lastname: 'lastname',
  image: 'image',
  phone: 'phone',
  email: 'email'
};

exports.Prisma.detail_exportOrderByRelevanceFieldEnum = {
  batch_code: 'batch_code',
  order_id: 'order_id',
  product_id: 'product_id',
  note: 'note'
};

exports.Prisma.detail_importOrderByRelevanceFieldEnum = {
  batch_code: 'batch_code',
  import_id: 'import_id',
  product_id: 'product_id'
};

exports.Prisma.device_templatesOrderByRelevanceFieldEnum = {
  name: 'name',
  created_by: 'created_by',
  status: 'status'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.devicesOrderByRelevanceFieldEnum = {
  serial_number: 'serial_number',
  account_id: 'account_id',
  hub_id: 'hub_id',
  name: 'name',
  wifi_ssid: 'wifi_ssid',
  wifi_password: 'wifi_password',
  link_status: 'link_status',
  lock_status: 'lock_status'
};

exports.Prisma.employeeOrderByRelevanceFieldEnum = {
  id: 'id',
  surname: 'surname',
  lastname: 'lastname',
  image: 'image',
  email: 'email',
  phone: 'phone'
};

exports.Prisma.export_warehouseOrderByRelevanceFieldEnum = {
  export_code: 'export_code',
  employee_id: 'employee_id',
  file_authenticate: 'file_authenticate',
  note: 'note'
};

exports.Prisma.firmwareOrderByRelevanceFieldEnum = {
  version: 'version',
  file_path: 'file_path',
  note: 'note',
  name: 'name'
};

exports.Prisma.firmware_update_historyOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  status: 'status'
};

exports.Prisma.hourly_valuesOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial'
};

exports.Prisma.housesOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address',
  icon_name: 'icon_name',
  icon_color: 'icon_color'
};

exports.Prisma.image_productOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  image: 'image'
};

exports.Prisma.import_warehouseOrderByRelevanceFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  file_authenticate: 'file_authenticate',
  note: 'note'
};

exports.Prisma.likedOrderByRelevanceFieldEnum = {
  customer_id: 'customer_id',
  product_id: 'product_id'
};

exports.Prisma.notificationOrderByRelevanceFieldEnum = {
  account_id: 'account_id',
  text: 'text',
  type: 'type'
};

exports.Prisma.orderOrderByRelevanceFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  saler_id: 'saler_id',
  shipper_id: 'shipper_id',
  address: 'address',
  payment_method: 'payment_method',
  payment_account: 'payment_account',
  phone: 'phone',
  name_recipient: 'name_recipient',
  note: 'note',
  platform_order: 'platform_order',
  image_shipped: 'image_shipped'
};

exports.Prisma.order_detailOrderByRelevanceFieldEnum = {
  order_id: 'order_id',
  product_id: 'product_id',
  unit: 'unit'
};

exports.Prisma.ownership_historyOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  from_user_id: 'from_user_id',
  to_user_id: 'to_user_id'
};

exports.Prisma.payment_infoOrderByRelevanceFieldEnum = {
  customer_id: 'customer_id',
  account_number: 'account_number',
  bank: 'bank',
  name_account: 'name_account'
};

exports.Prisma.permissionOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  type: 'type',
  show_in_menu: 'show_in_menu'
};

exports.Prisma.productOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  description_normal: 'description_normal',
  image: 'image'
};

exports.Prisma.planningOrderByRelevanceFieldEnum = {
  planning_id: 'planning_id',
  status: 'status',
  created_by: 'created_by',
  planning_note: 'planning_note'
};

exports.Prisma.production_batchesOrderByRelevanceFieldEnum = {
  production_batch_id: 'production_batch_id',
  status: 'status',
  batch_note: 'batch_note',
  planning_id: 'planning_id'
};

exports.Prisma.production_trackingOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  stage: 'stage',
  status: 'status',
  batch_id: 'batch_id'
};

exports.Prisma.review_productOrderByRelevanceFieldEnum = {
  customer_id: 'customer_id',
  product_id: 'product_id',
  comment: 'comment',
  image: 'image',
  response: 'response',
  note: 'note'
};

exports.Prisma.roleOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.share_requestsOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  from_user_id: 'from_user_id',
  to_user_id: 'to_user_id',
  permission_type: 'permission_type',
  status: 'status'
};

exports.Prisma.shared_permissionsOrderByRelevanceFieldEnum = {
  device_serial: 'device_serial',
  shared_with_user_id: 'shared_with_user_id',
  permission_type: 'permission_type'
};

exports.Prisma.slideshowOrderByRelevanceFieldEnum = {
  text_button: 'text_button',
  link: 'link',
  image: 'image'
};

exports.Prisma.spacesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.sync_trackingOrderByRelevanceFieldEnum = {
  account_id: 'account_id',
  ip_address: 'ip_address',
  sync_type: 'sync_type',
  sync_status: 'sync_status'
};

exports.Prisma.ticket_typesOrderByRelevanceFieldEnum = {
  type_name: 'type_name'
};

exports.Prisma.ticketsOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  device_serial: 'device_serial',
  description: 'description',
  status: 'status',
  assigned_to: 'assigned_to',
  resolve_solution: 'resolve_solution'
};

exports.Prisma.unitOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.user_devicesOrderByRelevanceFieldEnum = {
  user_id: 'user_id',
  device_name: 'device_name',
  device_id: 'device_id',
  device_token: 'device_token'
};

exports.Prisma.user_groupsOrderByRelevanceFieldEnum = {
  account_id: 'account_id',
  role: 'role'
};

exports.Prisma.warehouseOrderByRelevanceFieldEnum = {
  name: 'name',
  address: 'address'
};

exports.Prisma.warehouse_inventoryOrderByRelevanceFieldEnum = {
  product_id: 'product_id',
  batch_code: 'batch_code'
};

exports.Prisma.warrenty_timeOrderByRelevanceFieldEnum = {
  name: 'name'
};


exports.Prisma.ModelName = {
  account: 'account',
  address_book: 'address_book',
  alert_types: 'alert_types',
  alerts: 'alerts',
  attribute: 'attribute',
  attribute_category: 'attribute_category',
  attribute_group: 'attribute_group',
  attribute_product: 'attribute_product',
  batch_product_detail: 'batch_product_detail',
  blog: 'blog',
  cart: 'cart',
  categories: 'categories',
  components: 'components',
  contact: 'contact',
  customer: 'customer',
  detail_export: 'detail_export',
  detail_import: 'detail_import',
  device_templates: 'device_templates',
  devices: 'devices',
  employee: 'employee',
  export_warehouse: 'export_warehouse',
  firmware: 'firmware',
  firmware_update_history: 'firmware_update_history',
  groups: 'groups',
  hourly_values: 'hourly_values',
  houses: 'houses',
  image_product: 'image_product',
  import_warehouse: 'import_warehouse',
  liked: 'liked',
  notification: 'notification',
  order: 'order',
  order_detail: 'order_detail',
  ownership_history: 'ownership_history',
  payment_info: 'payment_info',
  permission: 'permission',
  permission_role: 'permission_role',
  product: 'product',
  planning: 'planning',
  production_batches: 'production_batches',
  production_components: 'production_components',
  production_tracking: 'production_tracking',
  review_product: 'review_product',
  role: 'role',
  share_requests: 'share_requests',
  shared_permissions: 'shared_permissions',
  slideshow: 'slideshow',
  spaces: 'spaces',
  sync_tracking: 'sync_tracking',
  template_components: 'template_components',
  ticket_types: 'ticket_types',
  tickets: 'tickets',
  unit: 'unit',
  user_devices: 'user_devices',
  user_groups: 'user_groups',
  warehouse: 'warehouse',
  warehouse_inventory: 'warehouse_inventory',
  warrenty_time: 'warrenty_time'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
